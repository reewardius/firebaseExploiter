import requests
import json

# AlienVault OTX API key
api_key = 'a70cde795be80ab10244bd5bfc65dc79b60101bf7d302600bb5d48d033aa191b'

# Domain to search for subdomains
domain = 'firebaseio.com'

# OTX API endpoint for subdomains
endpoint = f'https://otx.alienvault.com/api/v1/indicators/domain/{domain}/passive_dns'

# Headers for the API request
headers = {'X-OTX-API-KEY': api_key}

# Number of subdomains to retrieve per request
limit = 500

# Starting point for subdomains
offset = 0

# Initialize an empty list to store all subdomains
subdomains = []

# Initialize a counter
counter = 0

# Make multiple requests to retrieve additional subdomains
while counter < 15000:
    # Add limit and offset parameters to the API endpoint
    params = {'limit': limit, 'offset': offset}
    response = requests.get(endpoint, headers=headers, params=params)
    data = json.loads(response.text)
    subdomains += [subdomain['hostname'] for subdomain in data['passive_dns']]
    offset += limit
    counter += len(data['passive_dns'])
    if len(data['passive_dns']) < limit:
        break

# Save the subdomains to a file
with open('subdomains.txt', 'w') as f:
    for subdomain in subdomains:
        f.write(subdomain + '\n')
